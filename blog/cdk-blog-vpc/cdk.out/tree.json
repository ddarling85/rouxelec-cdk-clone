{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "cdk-blog-vpc-dev1": {
        "id": "cdk-blog-vpc-dev1",
        "path": "cdk-blog-vpc-dev1",
        "children": {
          "vpc-dev1": {
            "id": "vpc-dev1",
            "path": "cdk-blog-vpc-dev1/vpc-dev1",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.20.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-blog-vpc-dev1/vpc-dev1"
                      }
                    ]
                  }
                }
              },
              "IngressSubnet1": {
                "id": "IngressSubnet1",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.20.0.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Ingress"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet1RouteTableE52E7218"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet1SubnetFC0D9474"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet1RouteTableE52E7218"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "vpcdev1IGW6087D4EA"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "vpcdev1IngressSubnet1EIPAAAA4E9B",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet1SubnetFC0D9474"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "IngressSubnet2": {
                "id": "IngressSubnet2",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.20.1.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Ingress"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet2RouteTableEED9DF52"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet2SubnetF0D0F022"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet2RouteTableEED9DF52"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "vpcdev1IGW6087D4EA"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "vpcdev1IngressSubnet2EIPB67D28A7",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet2SubnetF0D0F022"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "ApplicationSubnet1": {
                "id": "ApplicationSubnet1",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.20.2.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Application"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1ApplicationSubnet1RouteTable1879050E"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1ApplicationSubnet1Subnet968B711D"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1ApplicationSubnet1RouteTable1879050E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "vpcdev1IngressSubnet1NATGatewayB8668F74"
                        }
                      }
                    }
                  }
                }
              },
              "ApplicationSubnet2": {
                "id": "ApplicationSubnet2",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.20.3.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Application"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1ApplicationSubnet2RouteTable09009088"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1ApplicationSubnet2SubnetF64D6EF3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/ApplicationSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1ApplicationSubnet2RouteTable09009088"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "vpcdev1IngressSubnet2NATGateway77F534EB"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-blog-vpc-dev1/vpc-dev1"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "vpcdev122B8E28D"
                    },
                    "internetGatewayId": {
                      "Ref": "vpcdev1IGW6087D4EA"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cdk-blog-l-custom-resource": {
        "id": "cdk-blog-l-custom-resource",
        "path": "cdk-blog-l-custom-resource",
        "children": {
          "DemoResource": {
            "id": "DemoResource",
            "path": "cdk-blog-l-custom-resource/DemoResource",
            "children": {
              "Role": {
                "id": "Role",
                "path": "cdk-blog-l-custom-resource/DemoResource/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-blog-l-custom-resource/DemoResource/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "cdk-blog-l-custom-resource/DemoResource/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-blog-l-custom-resource/DemoResource/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ec2:DescribeVpcs",
                                    "dynamodb:PutItem",
                                    "ec2:DescribeSubnets"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DemoResourceRoleDefaultPolicy2D59AFBB",
                            "roles": [
                              {
                                "Ref": "DemoResourceRole77B88CFC"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Singleton": {
                "id": "Singleton",
                "path": "cdk-blog-l-custom-resource/DemoResource/Singleton"
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-l-custom-resource/DemoResource/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cdk-blog-l-custom-resource/DemoResource/Resource/Default"
                  }
                }
              }
            }
          },
          "SingletonLambda2efb267a9d6011eab256129b54026e4d": {
            "id": "SingletonLambda2efb267a9d6011eab256129b54026e4d",
            "path": "cdk-blog-l-custom-resource/SingletonLambda2efb267a9d6011eab256129b54026e4d",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-l-custom-resource/SingletonLambda2efb267a9d6011eab256129b54026e4d/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "import boto3\nimport time\nimport json\nimport logging as log\nimport cfnresponse\n\nlog.getLogger().setLevel(log.INFO)\n\n# This needs to change if there are to be multiple resources\n# in the same stack\nphysical_id = 'TheOnlyCustomResource'\n\nec2 = boto3.resource('ec2', region_name='ca-central-1')\nclient = boto3.client('ec2', region_name='ca-central-1')\ndynamodb = boto3.resource('dynamodb', region_name='ca-central-1')\n\ndef lambda_handler(event, context):\n    try:\n        log.info('Input event: %s', event)\n\n        # Check if this is a Create and we're failing Creates\n        if event['RequestType'] == 'Create' and event['ResourceProperties'].get('FailCreate', False):\n            raise RuntimeError('Create failure requested')\n\n        # Do the thing\n        message = event['ResourceProperties']['Message']\n        attributes = {\n            'Response': 'You said \"%s\"' % message\n        }\n    \n        update_dynamo()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS,\n                         attributes, physical_id)\n    except Exception as e:\n        log.exception(e)\n        # cfnresponse's error message is always \"see CloudWatch\"\n        cfnresponse.send(event, context, cfnresponse.FAILED, {}, physical_id)\n\n\ndef update_dynamo():\n\n    filters = []\n    vpcs = list(ec2.vpcs.filter(Filters=filters))\n    \n    for vpc in vpcs:\n               response = client.describe_vpcs(\n                       VpcIds=[\n                           vpc.id,\n                       ]\n                   )\n               my_json=json.dumps(response, sort_keys=True, indent=4)    \n               print(response['Vpcs'])\n               cidr_range_table = dynamodb.Table('cidr_range_table')\n               \n               print(vpc.subnets.all())\n               for subnet in vpc.subnets.all():\n                          print(subnet.cidr_block)\n                          print(subnet.vpc_id)\n                          response_cidr_range_table = cidr_range_table.put_item(\n               \tItem={\n                               'id': subnet.subnet_id,\n                               'cidr_range': subnet.cidr_block,\n                               'vpc_id' : subnet.vpc_id,\n                               'type' : \"Subnet\"\n                           })\n               \n               vpc_name=''\n               if not response['Vpcs'][0].get('Tags') is None:\n                          if response['Vpcs'][0].get('Tags')[0]['Key']=='Name':                                 \n                                     print (response['Vpcs'][0].get('Tags')[0]['Value'])\n                                     vpc_name=response['Vpcs'][0].get('Tags')[0]['Value']\n               response_cidr_range_table = cidr_range_table.put_item(\n    \tItem={\n                    'id': response['Vpcs'][0]['VpcId'],\n                    'cidr_range': response['Vpcs'][0]['CidrBlock'],\n                    'vpc_name' : vpc_name,\n                    'type' : \"VPC\"\n                }\n               )\n                      \n           "
                    },
                    "handler": "index.lambda_handler",
                    "role": {
                      "Fn::GetAtt": [
                        "DemoResourceRole77B88CFC",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "timeout": 300
                  }
                }
              }
            }
          },
          "ResponseMessage": {
            "id": "ResponseMessage",
            "path": "cdk-blog-l-custom-resource/ResponseMessage"
          }
        }
      }
    }
  }
}