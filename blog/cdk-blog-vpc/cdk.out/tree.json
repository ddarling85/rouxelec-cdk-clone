{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "cdk-blog-vpc-dev1": {
        "id": "cdk-blog-vpc-dev1",
        "path": "cdk-blog-vpc-dev1",
        "children": {
          "vpc-dev1": {
            "id": "vpc-dev1",
            "path": "cdk-blog-vpc-dev1/vpc-dev1",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.72.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-blog-vpc-dev1/vpc-dev1"
                      }
                    ]
                  }
                }
              },
              "IngressSubnet1": {
                "id": "IngressSubnet1",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.72.0.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Ingress"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet1RouteTableE52E7218"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet1SubnetFC0D9474"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet1RouteTableE52E7218"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "vpcdev1IGW6087D4EA"
                        }
                      }
                    }
                  }
                }
              },
              "IngressSubnet2": {
                "id": "IngressSubnet2",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.72.1.0/24",
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Ingress"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "vpcdev122B8E28D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet2RouteTableEED9DF52"
                        },
                        "subnetId": {
                          "Ref": "vpcdev1IngressSubnet2SubnetF0D0F022"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-blog-vpc-dev1/vpc-dev1/IngressSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "vpcdev1IngressSubnet2RouteTableEED9DF52"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "vpcdev1IGW6087D4EA"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-blog-vpc-dev1/vpc-dev1"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "cdk-blog-vpc-dev1/vpc-dev1/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "vpcdev122B8E28D"
                    },
                    "internetGatewayId": {
                      "Ref": "vpcdev1IGW6087D4EA"
                    }
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "cdk-blog-vpc-dev1/Exports",
            "children": {
              "Output{\"Ref\":\"vpcdev122B8E28D\"}": {
                "id": "Output{\"Ref\":\"vpcdev122B8E28D\"}",
                "path": "cdk-blog-vpc-dev1/Exports/Output{\"Ref\":\"vpcdev122B8E28D\"}"
              },
              "Output{\"Ref\":\"vpcdev1IngressSubnet1SubnetFC0D9474\"}": {
                "id": "Output{\"Ref\":\"vpcdev1IngressSubnet1SubnetFC0D9474\"}",
                "path": "cdk-blog-vpc-dev1/Exports/Output{\"Ref\":\"vpcdev1IngressSubnet1SubnetFC0D9474\"}"
              }
            }
          }
        }
      },
      "cdk-blog-custom-resource2": {
        "id": "cdk-blog-custom-resource2",
        "path": "cdk-blog-custom-resource2",
        "children": {
          "cdk-blog-resource": {
            "id": "cdk-blog-resource",
            "path": "cdk-blog-custom-resource2/cdk-blog-resource",
            "children": {
              "Role_lambda": {
                "id": "Role_lambda",
                "path": "cdk-blog-custom-resource2/cdk-blog-resource/Role_lambda",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-blog-custom-resource2/cdk-blog-resource/Role_lambda/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "cdk-blog-custom-resource2/cdk-blog-resource/Role_lambda/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-blog-custom-resource2/cdk-blog-resource/Role_lambda/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeInstances",
                                    "ec2:DescribeInstanceAttribute",
                                    "dynamodb:PutItem",
                                    "ec2:DescribeSubnets"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "cdkblogresourceRolelambdaDefaultPolicyC31F6302",
                            "roles": [
                              {
                                "Ref": "cdkblogresourceRolelambda80C32557"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Singleton": {
                "id": "Singleton",
                "path": "cdk-blog-custom-resource2/cdk-blog-resource/Singleton"
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-custom-resource2/cdk-blog-resource/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "cdk-blog-custom-resource2/cdk-blog-resource/Resource/Default"
                  }
                }
              }
            }
          },
          "SingletonLambdab87ff276a80111ea9505129b54026e4d": {
            "id": "SingletonLambdab87ff276a80111ea9505129b54026e4d",
            "path": "cdk-blog-custom-resource2/SingletonLambdab87ff276a80111ea9505129b54026e4d",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-custom-resource2/SingletonLambdab87ff276a80111ea9505129b54026e4d/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "import boto3\nimport time\nimport json\nimport logging as log\nimport cfnresponse\n\nlog.getLogger().setLevel(log.INFO)\n\n# This needs to change if there are to be multiple resources\n# in the same stack\nphysical_id = 'TheOnlyCustomResource'\n\nec2 = boto3.resource('ec2', region_name='ca-central-1')\nclient = boto3.client('ec2', region_name='ca-central-1')\ndynamodb = boto3.resource('dynamodb', region_name='ca-central-1')\ncidr_range_table = dynamodb.Table('cidr_range_table')\n\ndef lambda_handler(event, context):\n    try:\n        log.info('Input event: %s', event)\n\n        # Check if this is a Create and we're failing Creates\n        if event['RequestType'] == 'Create' and event['ResourceProperties'].get('FailCreate', False):\n            raise RuntimeError('Create failure requested')\n\n        # Do the thing\n        message = event['ResourceProperties']['Message']\n        attributes = {\n            'Response': 'You said \"%s\"' % message\n        }\n    \n        update_dynamo()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS,\n                         attributes, physical_id)\n    except Exception as e:\n        log.exception(e)\n        # cfnresponse's error message is always \"see CloudWatch\"\n        cfnresponse.send(event, context, cfnresponse.FAILED, {}, physical_id)\n\ndef update_dynamo():\n\n    filters = []\n    vpcs = list(ec2.vpcs.filter(Filters=filters))\n    \n    for vpc in vpcs:\n        response = client.describe_vpcs(\n        VpcIds=[\n            vpc.id,\n            ]\n        )\n        my_json=json.dumps(response, sort_keys=True, indent=4)    \n        for subnet in vpc.subnets.all():\n            subnet_name=''\n            if not subnet.tags==None:\n                for tag in subnet.tags:\n                    if tag['Key']==\"Name\":\n                        subnet_name=tag['Value']\n                        response_cidr_range_table = cidr_range_table.put_item(\n                            Item={\n                                'id': subnet_name,\n                                'cidr_range': subnet.cidr_block,\n                                'vpc_id' : subnet.vpc_id,\n                                'component_type' : \"Subnet\",\n                                'subnet_id': subnet.subnet_id\n                        })          \n                        \n        \n        private_ip_address='test'\n        for instance in vpc.instances.all():\n            print('test')\n            print(instance.private_ip_address)\n            private_ip_address=instance.private_ip_address\n    \n        vpc_name='test'\n        if not response['Vpcs'][0].get('Tags') is None:\n            for tag in response['Vpcs'][0].get('Tags'):\n                if tag['Key']=='Name':  \n                    vpc_name=tag['Value']\n                    response_cidr_range_table = cidr_range_table.put_item(\n                    Item={\n                        'id': vpc_name,\n                        'cidr_range': response['Vpcs'][0]['CidrBlock'],\n                        'vpc_id' : response['Vpcs'][0]['VpcId'],\n                        'component_type' : \"VPC\",\n                        'ec2_ip_address' : private_ip_address\n                        }\n                    )\n                      \n           "
                    },
                    "handler": "index.lambda_handler",
                    "role": {
                      "Fn::GetAtt": [
                        "cdkblogresourceRolelambda80C32557",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "timeout": 300
                  }
                }
              }
            }
          },
          "ResponseMessage": {
            "id": "ResponseMessage",
            "path": "cdk-blog-custom-resource2/ResponseMessage"
          }
        }
      },
      "cdk-blog-ec2": {
        "id": "cdk-blog-ec2",
        "path": "cdk-blog-ec2",
        "children": {
          "Role_ec2": {
            "id": "Role_ec2",
            "path": "cdk-blog-ec2/Role_ec2",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-ec2/Role_ec2/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ec2.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-blog-ec2/Role_ec2/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-blog-ec2/Role_ec2/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "dynamodb:Scan",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "Roleec2DefaultPolicy955B85A0",
                        "roles": [
                          {
                            "Ref": "Roleec202EC015F"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "SecurityGroup": {
            "id": "SecurityGroup",
            "path": "cdk-blog-ec2/SecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-ec2/SecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Allow ping",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "icmp",
                        "fromPort": 8,
                        "toPort": -1,
                        "description": "allow ssh access from the world"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "cdk-blog-vpc-dev1:ExportsOutputRefvpcdev122B8E28D3296F345"
                    }
                  }
                }
              }
            }
          },
          "Instance": {
            "id": "Instance",
            "path": "cdk-blog-ec2/Instance",
            "children": {
              "InstanceSecurityGroup": {
                "id": "InstanceSecurityGroup",
                "path": "cdk-blog-ec2/Instance/InstanceSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-blog-ec2/Instance/InstanceSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "cdk-blog-ec2/Instance/InstanceSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-blog-ec2/Instance"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "cdk-blog-vpc-dev1:ExportsOutputRefvpcdev122B8E28D3296F345"
                        }
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "cdk-blog-ec2/Instance/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "Roleec202EC015F"
                      }
                    ]
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-blog-ec2/Instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "availabilityZone": {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::GetAZs": ""
                        }
                      ]
                    },
                    "iamInstanceProfile": {
                      "Ref": "InstanceInstanceProfileAB5AEF02"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t2.micro",
                    "keyName": "test-ec2",
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "InstanceInstanceSecurityGroupF0E2D5BE",
                          "GroupId"
                        ]
                      },
                      {
                        "Fn::GetAtt": [
                          "SecurityGroupDD263621",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Fn::ImportValue": "cdk-blog-vpc-dev1:ExportsOutputRefvpcdev1IngressSubnet1SubnetFC0D9474AE73AA93"
                    },
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-blog-ec2/Instance"
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install python3 -y\nyum install git -y\npip3 install boto3\ngit clone https://github.com/rouxelec/ec2_user_data.git\necho \"* * * * * python3 /ec2_user_data/userdata.py\" >> /tmp/montest\ncrontab /tmp/montest"
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "cdk-blog-ec2/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "cdk-blog-ec2/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118"
          }
        }
      }
    }
  }
}