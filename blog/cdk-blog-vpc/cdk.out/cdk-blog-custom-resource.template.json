{
  "Resources": {
    "DemoResourceRolelambdaB09834A4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-blog-custom-resource/DemoResource/Role_lambda/Resource"
      }
    },
    "DemoResourceRolelambdaDefaultPolicy48AC187B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeVpcs",
                "dynamodb:PutItem",
                "ec2:DescribeSubnets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DemoResourceRolelambdaDefaultPolicy48AC187B",
        "Roles": [
          {
            "Ref": "DemoResourceRolelambdaB09834A4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-blog-custom-resource/DemoResource/Role_lambda/DefaultPolicy/Resource"
      }
    },
    "DemoResource5B5C546C": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SingletonLambdaf3f47610a79311ea8a98129b54026e4d67032509",
            "Arn"
          ]
        },
        "Message": "CustomResource says hello"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdk-blog-custom-resource/DemoResource/Resource/Default"
      }
    },
    "SingletonLambdaf3f47610a79311ea8a98129b54026e4d67032509": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3\nimport time\nimport json\nimport logging as log\nimport cfnresponse\n\nlog.getLogger().setLevel(log.INFO)\n\n# This needs to change if there are to be multiple resources\n# in the same stack\nphysical_id = 'TheOnlyCustomResource'\n\nec2 = boto3.resource('ec2', region_name='ca-central-1')\nclient = boto3.client('ec2', region_name='ca-central-1')\ndynamodb = boto3.resource('dynamodb', region_name='ca-central-1')\ncidr_range_table = dynamodb.Table('cidr_range_table')\n\ndef lambda_handler(event, context):\n   print(\"test\")"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "DemoResourceRolelambdaB09834A4",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "DemoResourceRolelambdaDefaultPolicy48AC187B",
        "DemoResourceRolelambdaB09834A4"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-blog-custom-resource/SingletonLambdaf3f47610a79311ea8a98129b54026e4d/Resource"
      }
    }
  },
  "Outputs": {
    "ResponseMessage": {
      "Description": "The message that came back from the Custom Resource",
      "Value": {
        "Fn::GetAtt": [
          "DemoResource5B5C546C",
          "Response"
        ]
      }
    }
  }
}